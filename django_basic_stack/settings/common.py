"""
Django settings for project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from ast import literal_eval
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_BASIC_STACK_SECRETKEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = literal_eval(os.environ.get('DJANGO_BASIC_STACK_DEBUG', 'True'))

ALLOWED_HOSTS = os.environ.get('DJANGO_BASIC_STACK_ALLOWED_HOSTS').split(',')

CSRF_COOKIE_DOMAIN = os.environ.get('DJANGO_BASIC_STACK_CSRF_COOKIE_DOMAIN')
CSRF_TRUSTED_ORIGINS = os.environ.get('DJANGO_BASIC_STACK_CSRF_TRUSTED_ORIGINS').split(',')


# Application definition

BASE_URL = os.environ.get('DJANGO_BASIC_STACK_BASE_URL')

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'rest_framework',
    'rest_framework.authtoken',
    # APPS
    'utils',
    'apps.membership',
    'apps.shop',
]

MIDDLEWARE = [
    'django.middleware.gzip.GZipMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

SITE_ID = 1

ROOT_URLCONF = 'django_basic_stack.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_basic_stack.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_DB'),
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'HOST': os.environ.get('POSTGRES_DBHOST'),
        'PORT': os.environ.get('POSTGRES_DBPORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'pl'

TIME_ZONE = 'Europe/Warsaw'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(BASE_DIR, os.environ.get('DJANGO_BASIC_STACK_STATIC_ROOT'))

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, os.environ.get('DJANGO_BASIC_STACK_MEDIA_ROOT'))

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Email settings

EMAIL_BACKEND = os.environ.get('DJANGO_BASIC_STACK_EMAIL_BACKEND')

EMAIL_HOST = os.environ.get('DJANGO_BASIC_STACK_EMAIL_HOST')

EMAIL_PORT = os.environ.get('DJANGO_BASIC_STACK_EMAIL_PORT')

EMAIL_HOST_USER = os.environ.get('DJANGO_BASIC_STACK_EMAIL_HOST_USER')

EMAIL_HOST_PASSWORD = os.environ.get('DJANGO_BASIC_STACK_EMAIL_HOST_PASSWORD')

EMAIL_USE_SSL = literal_eval(os.environ.get('DJANGO_BASIC_STACK_EMAIL_USE_SSL', 'False'))

DEFAULT_FROM_EMAIL = os.environ.get('DJANGO_BASIC_STACK_DEFAULT_FROM_EMAIL')


# Rest Framework

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# Simple JWT

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
}


# Compressor

if not DEBUG:
    COMPRESS_ENABLED = True


# Tpay debug URLS (ngrok)

TPAY_DEBUG_RESULT_URL = os.environ.get('TPAY_DEBUG_RESULT_URL')
TPAY_DEBUG_RETURN_URL = os.environ.get('TPAY_DEBUG_RETURN_URL')


# Celery

CELERY_BROKER_URL = 'redis://django-basic-stack-redis:6379/0'
CELERY_RESULT_BACKEND = 'redis://django-basic-stack-redis:6379/0'


# User extending

AUTH_USER_MODEL = 'membership.User'
